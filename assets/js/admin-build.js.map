{"version":3,"file":"assets/js/admin-build.js","mappings":";ouBACIA,QAAQC,IAAI,iBAEZC,SAASC,iBAAiB,oBAAoB,WAuClD,IACUC,EACAC,EACAC,EACAC,EAEAC,EAEAC,EAgBcP,SAASQ,iBAAiB,eAElCC,SAAQ,SAACC,GACjBC,EAAED,GAASE,WAAW,CAClBC,KAAM,QACNC,OAAQ,IACRC,QAAS,CACL,CAAC,QAAS,CAAC,UACX,CAAC,OAAQ,CAAC,OAAQ,SAAU,YAAa,UACzC,CAAC,WAAY,CAAC,aACd,CAAC,QAAS,CAAC,UACX,CAAC,OAAQ,CAAC,KAAM,KAAM,cACtB,CAAC,QAAS,CAAC,UACX,CAAC,SAAU,CAAC,OAAQ,UAAW,UAC/B,CAAC,OAAQ,CAAC,aAAc,WAAY,UAExCC,UAAW,CACPC,cAAe,SAAUC,GACrB,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQH,EAAM,IAE9BI,MAAM,4BAA6B,CAC/BC,OAAQ,OACRC,KAAML,IAELM,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACG,GACCA,EAAKC,QACLlB,EAAED,GAASE,WAAW,cAAegB,EAAKE,MAE1CC,MACIH,EAAKI,SACD,mBAGhB,IAAE,OACK,SAACC,GAAK,OAAKnC,QAAQmC,MAAMA,EAAM,GAC9C,IAGZ,IA/DM/B,EAAcF,SAASkC,eAAe,iBACtC/B,EAAeH,SAASkC,eAAe,kBACvC9B,EAASJ,SAASmC,cAAc,oBAChC9B,EAAWL,SAASkC,eAAe,YAEnC5B,EAAW,CAACJ,EAAaC,GAAciC,QAAO,SAACC,GAAG,OAAKA,CAAG,IAE1D9B,EAAe,SAAC+B,GAClBA,EAAEC,iBACFnC,EAAOoC,UAAUC,OAAO,UACxBpC,EAASmC,UAAUC,OAAO,SAC9B,EAEApC,EAASJ,iBAAiB,QAASM,GAE/BD,EAASoC,QACTpC,EAASG,SAAQ,SAAC4B,GACdA,EAAIpC,iBAAiB,QAASM,EAClC,IA/CJoC,EAFgB3C,SAASQ,iBAAiB,oBAE7BC,SAAQ,SAACmC,GAClB,IAAMC,EAAU7C,SAASkC,eAAeU,EAAKE,QAAQC,SAErD,GAAKF,EAAL,CAEA,IAAMG,EAAKL,EAAOC,EAAKK,UACjBC,EAAQP,EAAOE,EAAQI,UAExBC,GAAaF,IAElBA,EAAMvC,SAAQ,SAAC0C,EAAMC,GACjBD,EAAKlD,iBAAiB,SAAS,SAACqC,GAC5BA,EAAEC,iBAEFS,EAAMvC,SAAQ,SAAC4C,EAAIC,GACfD,EAAGb,UAAUe,OAAO,UACpBL,EAASI,GAAGd,UAAUe,OAAO,SACjC,IAEAJ,EAAKX,UAAUgB,IAAI,UACnBN,EAASE,GAAOZ,UAAUgB,IAAI,SAClC,GACJ,IAEAR,EAAM,GAAGS,QArBW,CAsBxB,GAhCA","sources":["webpack://nineonelabs/./src/admin/js/index.js"],"sourcesContent":["function App() {\r\n    console.log(\"Admin - App()\");\r\n\r\n    document.addEventListener(\"DOMContentLoaded\", () => {\r\n        initSummerNote();\r\n        initMobile();\r\n        initTabMenu();\r\n    });\r\n}\r\nApp();\r\n\r\nfunction initTabMenu() {\r\n    const tabMenu = document.querySelectorAll(\"[data-tab-menu]\");\r\n\r\n    [...tabMenu].forEach((menu) => {\r\n        const content = document.getElementById(menu.dataset.tabMenu);\r\n\r\n        if (!content) return;\r\n\r\n        const items = [...menu.children];\r\n        const sections = [...content.children];\r\n\r\n        if (!sections || !items) return;\r\n\r\n        items.forEach((item, index) => {\r\n            item.addEventListener(\"click\", (e) => {\r\n                e.preventDefault();\r\n\r\n                items.forEach((el, i) => {\r\n                    el.classList.remove(\"active\");\r\n                    sections[i].classList.remove(\"active\");\r\n                });\r\n\r\n                item.classList.add(\"active\");\r\n                sections[index].classList.add(\"active\");\r\n            });\r\n        });\r\n\r\n        items[0].click();\r\n    });\r\n}\r\n\r\nfunction initMobile() {\r\n    const menuOpenBtn = document.getElementById(\"menu-open-btn\");\r\n    const menuCloseBtn = document.getElementById(\"menu-close-btn\");\r\n    const drawer = document.querySelector(\".no-admin-drawer\");\r\n    const backdrop = document.getElementById(\"backdrop\");\r\n\r\n    const triggers = [menuOpenBtn, menuCloseBtn].filter((btn) => btn);\r\n\r\n    const clickHandler = (e) => {\r\n        e.preventDefault();\r\n        drawer.classList.toggle(\"active\");\r\n        backdrop.classList.toggle(\"active\");\r\n    };\r\n\r\n    backdrop.addEventListener(\"click\", clickHandler);\r\n\r\n    if (triggers.length) {\r\n        triggers.forEach((btn) => {\r\n            btn.addEventListener(\"click\", clickHandler);\r\n        });\r\n    }\r\n}\r\n\r\nfunction initSummerNote() {\r\n    const summernotes = document.querySelectorAll(\".summernote\");\r\n\r\n    summernotes.forEach((element) => {\r\n        $(element).summernote({\r\n            lang: \"ko-KR\",\r\n            height: 350,\r\n            toolbar: [\r\n                [\"style\", [\"style\"]],\r\n                [\"font\", [\"bold\", \"italic\", \"underline\", \"clear\"]], // ← italic 추가\r\n                [\"fontname\", [\"fontname\"]],\r\n                [\"color\", [\"color\"]],\r\n                [\"para\", [\"ul\", \"ol\", \"paragraph\"]],\r\n                [\"table\", [\"table\"]],\r\n                [\"insert\", [\"link\", \"picture\", \"video\"]],\r\n                [\"view\", [\"fullscreen\", \"codeview\", \"help\"]],\r\n            ],\r\n            callbacks: {\r\n                onImageUpload: function (files) {\r\n                    const formData = new FormData();\r\n                    formData.append(\"file\", files[0]);\r\n\r\n                    fetch(\"/admin/uploads/summernote\", {\r\n                        method: \"POST\",\r\n                        body: formData,\r\n                    })\r\n                        .then((response) => response.json())\r\n                        .then((data) => {\r\n                            if (data.success) {\r\n                                $(element).summernote(\"insertImage\", data.path);\r\n                            } else {\r\n                                alert(\r\n                                    data.message ||\r\n                                        \"이미지 업로드에 실패했습니다.\"\r\n                                );\r\n                            }\r\n                        })\r\n                        .catch((error) => console.error(error));\r\n                },\r\n            },\r\n        });\r\n    });\r\n}\r\n"],"names":["console","log","document","addEventListener","menuOpenBtn","menuCloseBtn","drawer","backdrop","triggers","clickHandler","querySelectorAll","forEach","element","$","summernote","lang","height","toolbar","callbacks","onImageUpload","files","formData","FormData","append","fetch","method","body","then","response","json","data","success","path","alert","message","error","getElementById","querySelector","filter","btn","e","preventDefault","classList","toggle","length","_toConsumableArray","menu","content","dataset","tabMenu","items","children","sections","item","index","el","i","remove","add","click"],"sourceRoot":""}