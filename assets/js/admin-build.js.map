{"version":3,"file":"assets/js/admin-build.js","mappings":"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","sources":["webpack://nineonelabs/./src/admin/js/index.js"],"sourcesContent":["function App() {\r\n    console.log(\"Admin - App()\");\r\n    document.addEventListener(\"DOMContentLoaded\", () => {\r\n        initSummerNote();\r\n        initMobile();\r\n        initTabMenu();\r\n    });\r\n}\r\nApp();\r\n\r\nfunction initTabMenu() {\r\n    const tabMenu = document.querySelectorAll(\"[data-tab-menu]\");\r\n    [...tabMenu].forEach((menu) => {\r\n        const content = document.getElementById(menu.dataset.tabMenu);\r\n        if (!content) return;\r\n\r\n        const items = [...menu.children];\r\n        const sections = [...content.children];\r\n        if (!sections || !items) return;\r\n\r\n        items.forEach((item, index) => {\r\n            item.addEventListener(\"click\", (e) => {\r\n                e.preventDefault();\r\n                items.forEach((el, i) => {\r\n                    el.classList.remove(\"active\");\r\n                    sections[i].classList.remove(\"active\");\r\n                });\r\n                item.classList.add(\"active\");\r\n                sections[index].classList.add(\"active\");\r\n            });\r\n        });\r\n\r\n        items[0]?.click();\r\n    });\r\n}\r\n\r\nfunction initMobile() {\r\n    const menuOpenBtn = document.getElementById(\"menu-open-btn\");\r\n    const menuCloseBtn = document.getElementById(\"menu-close-btn\");\r\n    const drawer = document.querySelector(\".no-admin-drawer\");\r\n    const backdrop = document.getElementById(\"backdrop\");\r\n\r\n    const triggers = [menuOpenBtn, menuCloseBtn].filter(Boolean);\r\n    const clickHandler = (e) => {\r\n        e.preventDefault();\r\n        drawer?.classList.toggle(\"active\");\r\n        backdrop?.classList.toggle(\"active\");\r\n    };\r\n    backdrop?.addEventListener(\"click\", clickHandler);\r\n    triggers.forEach((btn) => btn.addEventListener(\"click\", clickHandler));\r\n}\r\n\r\nfunction initSummerNote() {\r\n    // ===== Insert custom CSS once (dropdown + active-state) =====\r\n    if (!document.getElementById(\"sn-letterspacing-style\")) {\r\n        const style = document.createElement(\"style\");\r\n        style.id = \"sn-letterspacing-style\";\r\n        style.textContent = `\r\n        /* Letter-spacing dropdown UI */\r\n        .note-editor .dropdown-menu.note-letterspacing-menu { \r\n            padding: 8px; min-width: 240px; max-height: 260px; overflow:auto; \r\n        }\r\n        .note-editor .note-letterspacing-menu .ls-item {\r\n            position: relative;\r\n            display:flex; align-items:center; justify-content:space-between;\r\n            gap:12px; padding:8px 10px; border-radius:8px; text-decoration:none; color:inherit;\r\n        }\r\n        .note-editor .note-letterspacing-menu .ls-item:hover { \r\n            background: rgba(0,0,0,0.06);\r\n        }\r\n        .note-editor .note-letterspacing-menu .ls-item.active { \r\n            background: rgba(0,0,0,0.09);\r\n        }\r\n        .note-editor .note-letterspacing-menu .ls-item.active::before {\r\n            content: \"✓\";\r\n            position:absolute; left:8px; font-size:12px; opacity:0.8;\r\n        }\r\n        .note-editor .note-letterspacing-menu .ls-preview {\r\n            flex:1; font-size:14px; line-height:1; white-space:nowrap;\r\n            padding:4px 8px; border-radius:6px; background: rgba(0,0,0,0.04);\r\n            margin-left:12px; /* room for checkmark */\r\n        }\r\n        .note-editor .note-letterspacing-menu .ls-value {\r\n            font-variant-numeric: tabular-nums; min-width:48px; text-align:right;\r\n            font-size:12px; opacity:0.85;\r\n        }\r\n        .note-editor .note-btn-letters .note-icon { margin-right:6px; }\r\n        `;\r\n        document.head.appendChild(style);\r\n    }\r\n\r\n    const summernotes = document.querySelectorAll(\".summernote\");\r\n\r\n    // Helper: escape HTML\r\n    const escapeHtml = (s) =>\r\n        s.replace(/[&<>\"']/g, ch =>\r\n            ({'&':'&amp;','<':'&lt;','>':'&gt;','\"':'&quot;',\"'\":'&#39;'}[ch])\r\n        );\r\n\r\n    // Helper: find current letter-spacing at caret/selection start (returns '0px' if normal)\r\n    function getCurrentLetterSpacingPx(node, editableRoot) {\r\n        // get an element node within editor\r\n        let el = node && (node.nodeType === 1 ? node : node.parentElement);\r\n        while (el && el !== editableRoot && el.nodeType === 1) {\r\n            // stop at the first element (closest) — computed style will cascade\r\n            const ls = window.getComputedStyle(el).letterSpacing;\r\n            if (ls && ls !== \"normal\") {\r\n                // already px (computedStyle returns px)\r\n                return ls;\r\n            }\r\n            el = el.parentElement;\r\n        }\r\n        // fallback to root computed style\r\n        const rootLS = editableRoot ? window.getComputedStyle(editableRoot).letterSpacing : \"normal\";\r\n        return (rootLS && rootLS !== \"normal\") ? rootLS : \"0px\";\r\n    }\r\n\r\n    // ===== Letter-spacing dropdown button (pixels only) =====\r\n    const LetterSpacingDropdown = function (context) {\r\n        const ui = $.summernote.ui;\r\n        const values = ['0px', '1px', '2px', '3px', '4px', '6px', '8px', '10px'];\r\n\r\n        const itemsHtml = values.map(v => `\r\n            <a class=\"dropdown-item ls-item\" href=\"#\" data-value=\"${v}\">\r\n                <span class=\"ls-preview\" style=\"letter-spacing:${v}\">가Aa 가Aa</span>\r\n                <span class=\"ls-value\">${v}</span>\r\n            </a>\r\n        `).join('') + `\r\n            <div class=\"dropdown-divider\"></div>\r\n            <a class=\"dropdown-item ls-item\" href=\"#\" data-value=\"0px\">\r\n                <span class=\"ls-preview\" style=\"letter-spacing:0px\">Reset</span>\r\n                <span class=\"ls-value\">0px</span>\r\n            </a>\r\n        `;\r\n\r\n        // Render group (toggle + dropdown)\r\n        const $group = ui.buttonGroup([\r\n            ui.button({\r\n                className: 'dropdown-toggle note-btn-letters',\r\n                contents: '<i class=\"note-icon-magic note-icon\"></i>자간<span class=\"caret\"></span>',\r\n                tooltip: 'Letter spacing (px)',\r\n                data: { toggle: 'dropdown' }\r\n            }),\r\n            ui.dropdown({\r\n                className: 'note-letterspacing-menu',\r\n                contents: itemsHtml,\r\n                callback: function ($dropdown) {\r\n                    // When opening dropdown, compute current letter-spacing and mark active\r\n                    const $toggle = $dropdown.prev('.dropdown-toggle');\r\n\r\n                    function markActive(currentPx) {\r\n                        const $links = $dropdown.find('a.ls-item');\r\n                        $links.removeClass('active');\r\n                        // find exact match among predefined values\r\n                        const $match = $links.filter((_, a) => $(a).data('value') === currentPx);\r\n                        if ($match.length) $match.addClass('active');\r\n                    }\r\n\r\n                    // Try to hook into Bootstrap's show event if available, else on toggle click\r\n                    $toggle.on('click', function () {\r\n                        // restore and inspect selection\r\n                        context.invoke('editor.focus');\r\n                        context.invoke('editor.restoreRange');\r\n                        const rng = context.invoke('editor.getLastRange');\r\n\r\n                        // Determine node to inspect\r\n                        let anchorNode = (rng && rng.sc) ? rng.sc : (document.getSelection()?.anchorNode || null);\r\n                        const editableRoot = context && context.layoutInfo ? context.layoutInfo.editable[0] : null;\r\n                        const currentPx = getCurrentLetterSpacingPx(anchorNode, editableRoot);\r\n                        markActive(currentPx);\r\n                    });\r\n\r\n                    // Apply a value on click\r\n                    $dropdown.find('a.ls-item').on('click', function (e) {\r\n                        e.preventDefault();\r\n                        const value = $(this).data('value');\r\n\r\n                        context.invoke('editor.focus');\r\n                        context.invoke('editor.restoreRange');\r\n                        const rng = context.invoke('editor.getLastRange');\r\n\r\n                        if (!rng || rng.isCollapsed()) {\r\n                            alert('자간을 적용할 텍스트를 먼저 선택해주세요.');\r\n                            return;\r\n                        }\r\n\r\n                        const text = rng.toString();\r\n                        if (!text) return;\r\n\r\n                        const html = `<span style=\"letter-spacing:${value}\">${escapeHtml(text)}</span>`;\r\n                        context.invoke('editor.pasteHTML', html);\r\n\r\n                        // update active state after applying\r\n                        $(this).closest('.note-letterspacing-menu').find('.ls-item').removeClass('active');\r\n                        $(this).addClass('active');\r\n                    });\r\n                }\r\n            })\r\n        ]);\r\n\r\n        return $group.render();\r\n    };\r\n\r\n    document.querySelectorAll(\".summernote\").forEach((element) => {\r\n        $(element).summernote({\r\n            lang: \"ko-KR\",\r\n            height: 350,\r\n\r\n            toolbar: [\r\n                [\"style\", [\"style\"]],\r\n                [\"font\", [\"bold\", \"italic\", \"underline\", \"clear\", \"fontsize\"]],\r\n                [\"fontname\", [\"fontname\"]],\r\n                [\"color\", [\"color\"]],\r\n                [\"para\", [\"ul\", \"ol\", \"paragraph\"]],\r\n                [\"table\", [\"table\"]],\r\n                [\"insert\", [\"link\", \"picture\", \"video\"]],\r\n                [\"height\", [\"height\", \"letterSpacing\"]],\r\n                [\"view\", [\"fullscreen\", \"codeview\", \"help\"]],\r\n            ],\r\n\r\n            fontSizes: ['8', '9', '10', '11', '12', '14', '16', '18', '20', '24', '28', '32', '36', '40', '48'],\r\n            lineHeights: ['1', '1.2', '1.3', '1.5', '1.75', '2', '2.5', '3'],\r\n\r\n            buttons: {\r\n                letterSpacing: LetterSpacingDropdown\r\n            },\r\n\r\n            callbacks: {\r\n                onInit: function () {\r\n                    // keep range fresh so dropdown can read current style reliably\r\n                    $(element).summernote('focus');\r\n                    $(element).summernote('saveRange');\r\n                },\r\n                onKeyup: function () {\r\n                    $(element).summernote('saveRange');\r\n                },\r\n                onMouseUp: function () {\r\n                    $(element).summernote('saveRange');\r\n                },\r\n                onImageUpload: function (files) {\r\n                    const formData = new FormData();\r\n                    formData.append(\"file\", files[0]);\r\n\r\n                    fetch(\"/admin/uploads/summernote\", {\r\n                        method: \"POST\",\r\n                        body: formData,\r\n                    })\r\n                        .then((response) => response.json())\r\n                        .then((data) => {\r\n                            if (data.success) {\r\n                                $(element).summernote(\"insertImage\", data.path);\r\n                            } else {\r\n                                alert(data.message || \"이미지 업로드에 실패했습니다.\");\r\n                            }\r\n                        })\r\n                        .catch((error) => console.error(error));\r\n                },\r\n            },\r\n        });\r\n    });\r\n}\r\n"],"names":["console","log","document","addEventListener","menuOpenBtn","menuCloseBtn","drawer","backdrop","triggers","clickHandler","getElementById","style","createElement","id","textContent","head","appendChild","querySelectorAll","escapeHtml","s","replace","ch","getCurrentLetterSpacingPx","node","editableRoot","el","nodeType","parentElement","ls","window","getComputedStyle","letterSpacing","rootLS","LetterSpacingDropdown","context","ui","$","summernote","itemsHtml","map","v","concat","join","buttonGroup","button","className","contents","tooltip","data","toggle","dropdown","callback","$dropdown","markActive","currentPx","$links","find","removeClass","$match","filter","_","a","length","addClass","prev","on","_document$getSelectio","invoke","rng","sc","getSelection","anchorNode","layoutInfo","editable","e","preventDefault","value","this","isCollapsed","text","toString","html","closest","alert","render","forEach","element","lang","height","toolbar","fontSizes","lineHeights","buttons","callbacks","onInit","onKeyup","onMouseUp","onImageUpload","files","formData","FormData","append","fetch","method","body","then","response","json","success","path","message","error","initSummerNote","querySelector","Boolean","classList","btn","_toConsumableArray","menu","_items$","content","dataset","tabMenu","items","children","sections","item","index","i","remove","add","click"],"sourceRoot":""}